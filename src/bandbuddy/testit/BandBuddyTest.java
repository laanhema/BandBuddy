package bandbuddy.testit;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import bandbuddy.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2018.04.20 09:50:49 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class BandBuddyTest {



  // Generated by ComTest BEGIN
  /** testNimiKenttaTarkistus254 */
  @Test
  public void testNimiKenttaTarkistus254() {    // BandBuddy: 254
    BandBuddy testiluokka = new BandBuddy(); 
    assertEquals("From: BandBuddy line: 256", null, testiluokka.nimiKenttaTarkistus("Pate Perus")); 
    assertEquals("From: BandBuddy line: 257", null, testiluokka.nimiKenttaTarkistus("")); 
    assertEquals("From: BandBuddy line: 258", "Kirjoita nimesi muodossa Etunimi Sukunimi!", testiluokka.nimiKenttaTarkistus("1234")); 
    assertEquals("From: BandBuddy line: 259", "Kirjoita nimesi muodossa Etunimi Sukunimi!", testiluokka.nimiKenttaTarkistus("-")); 
    assertEquals("From: BandBuddy line: 260", "Kirjoita nimesi muodossa Etunimi Sukunimi!", testiluokka.nimiKenttaTarkistus(" ")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIkaKenttaTarkistus275 */
  @Test
  public void testIkaKenttaTarkistus275() {    // BandBuddy: 275
    BandBuddy testiluokka = new BandBuddy(); 
    assertEquals("From: BandBuddy line: 277", "Kirjoita ikäsi käyttämällä vain numeroita!", testiluokka.ikaKenttaTarkistus("asdasdffs")); 
    assertEquals("From: BandBuddy line: 278", null, testiluokka.ikaKenttaTarkistus("")); 
    assertEquals("From: BandBuddy line: 279", null, testiluokka.ikaKenttaTarkistus("19")); 
    assertEquals("From: BandBuddy line: 280", "Kirjoita ikäsi käyttämällä vain numeroita!", testiluokka.ikaKenttaTarkistus("-")); 
    assertEquals("From: BandBuddy line: 281", "Kirjoita ikäsi käyttämällä vain numeroita!", testiluokka.ikaKenttaTarkistus(" ")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSukupuoliKenttaTarkistus296 */
  @Test
  public void testSukupuoliKenttaTarkistus296() {    // BandBuddy: 296
    BandBuddy testiluokka = new BandBuddy(); 
    assertEquals("From: BandBuddy line: 298", null, testiluokka.sukupuoliKenttaTarkistus("asdasdffs")); 
    assertEquals("From: BandBuddy line: 299", null, testiluokka.sukupuoliKenttaTarkistus("")); 
    assertEquals("From: BandBuddy line: 300", "Tähän kenttään sallitaan vain aakkosia!", testiluokka.sukupuoliKenttaTarkistus("19")); 
    assertEquals("From: BandBuddy line: 301", "Tähän kenttään sallitaan vain aakkosia!", testiluokka.sukupuoliKenttaTarkistus("-")); 
    assertEquals("From: BandBuddy line: 302", "Tähän kenttään sallitaan vain aakkosia!", testiluokka.sukupuoliKenttaTarkistus(" ")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPaikkakuntaKenttaTarkistus317 */
  @Test
  public void testPaikkakuntaKenttaTarkistus317() {    // BandBuddy: 317
    BandBuddy testiluokka = new BandBuddy(); 
    assertEquals("From: BandBuddy line: 319", null, testiluokka.paikkakuntaKenttaTarkistus("asdasdffs")); 
    assertEquals("From: BandBuddy line: 320", null, testiluokka.paikkakuntaKenttaTarkistus("")); 
    assertEquals("From: BandBuddy line: 321", "Tähän kenttään sallitaan vain aakkosia!", testiluokka.paikkakuntaKenttaTarkistus("19")); 
    assertEquals("From: BandBuddy line: 322", "Tähän kenttään sallitaan vain aakkosia!", testiluokka.paikkakuntaKenttaTarkistus("-")); 
    assertEquals("From: BandBuddy line: 323", "Tähän kenttään sallitaan vain aakkosia!", testiluokka.paikkakuntaKenttaTarkistus(" ")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testInstrumentitKenttaTarkistus338 */
  @Test
  public void testInstrumentitKenttaTarkistus338() {    // BandBuddy: 338
    BandBuddy testiluokka = new BandBuddy(); 
    assertEquals("From: BandBuddy line: 340", null, testiluokka.instrumentitKenttaTarkistus("asdasdffs")); 
    assertEquals("From: BandBuddy line: 341", null, testiluokka.instrumentitKenttaTarkistus("")); 
    assertEquals("From: BandBuddy line: 342", null, testiluokka.instrumentitKenttaTarkistus("kitara")); 
    assertEquals("From: BandBuddy line: 343", null, testiluokka.instrumentitKenttaTarkistus("pan-huilu")); 
    assertEquals("From: BandBuddy line: 344", "Kirjoita tähän soittamasi instrumentit. Jos instrumentteja on monta erota ne pilkulla ja välilyönnillä toisistaan.", testiluokka.instrumentitKenttaTarkistus("19")); 
    assertEquals("From: BandBuddy line: 345", "Kirjoita tähän soittamasi instrumentit. Jos instrumentteja on monta erota ne pilkulla ja välilyönnillä toisistaan.", testiluokka.instrumentitKenttaTarkistus("-")); 
    assertEquals("From: BandBuddy line: 346", "Kirjoita tähän soittamasi instrumentit. Jos instrumentteja on monta erota ne pilkulla ja välilyönnillä toisistaan.", testiluokka.instrumentitKenttaTarkistus(" ")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGenretKenttaTarkistus362 */
  @Test
  public void testGenretKenttaTarkistus362() {    // BandBuddy: 362
    BandBuddy testiluokka = new BandBuddy(); 
    assertEquals("From: BandBuddy line: 364", null, testiluokka.genretKenttaTarkistus("asdasdffs")); 
    assertEquals("From: BandBuddy line: 365", null, testiluokka.genretKenttaTarkistus("")); 
    assertEquals("From: BandBuddy line: 366", null, testiluokka.genretKenttaTarkistus("djent")); 
    assertEquals("From: BandBuddy line: 367", null, testiluokka.genretKenttaTarkistus("r'n'b")); 
    assertEquals("From: BandBuddy line: 368", "Kirjoita tähän sinua kiinnostavat musiikkilajit. Jos lajeja on monta erota ne pilkulla ja välilyönnillä toisistaan.", testiluokka.genretKenttaTarkistus("19")); 
    assertEquals("From: BandBuddy line: 369", "Kirjoita tähän sinua kiinnostavat musiikkilajit. Jos lajeja on monta erota ne pilkulla ja välilyönnillä toisistaan.", testiluokka.genretKenttaTarkistus("-")); 
    assertEquals("From: BandBuddy line: 370", "Kirjoita tähän sinua kiinnostavat musiikkilajit. Jos lajeja on monta erota ne pilkulla ja välilyönnillä toisistaan.", testiluokka.genretKenttaTarkistus(" ")); 
  } // Generated by ComTest END
}